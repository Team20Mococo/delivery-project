name: Build in Pull Request trigger

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE_NAME: mococo
  EC2_HOST: sparta
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Gradle execute permission for gradlew # Gradle로 빌드할 것이며, 빌드를 하기위한 gradlew에 권한을 부여
        run: chmod +x ./gradlew
        shell: bash # 돌아가는 환경을 bash shell로 하겠다.

      - name: Set YML
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_SECRET_YML }}" | base64 --decode > src/main/resources/application-secret.yml
          find src

      - name: Build with Gradle
        run: ./gradlew build --exclude-task test
        shell: bash

      - name: Build the Docker image # 도커 이미지 빌드
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Login to Docker Hub using Access Token
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKER_HUB_REPO }}/${{ env.DOCKER_IMAGE_NAME }}

  deploy-to-ec2:

    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secret.AWS_EC2_HOST }}
          username: ${{ secret.AWS_EC2_USERNAME }}
          key: ${{ env.PRIVATE_KEY }}
          script: |
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=80-8080")

            if [ ! -z "$CONTAINER_ID" ]; then
              sudo docker stop $CONTAINER_ID
              sudo docker rm $CONTAINER_ID
            fi

            sudo docker pull ${{ secrets.DOCKER_HUB_REPO }}/${{ env.DOCKER_IMAGE_NAME }}
            sudo docker run -d -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }} -e TZ=Asia/Seoul